:generateMainMapperClasses UP-TO-DATE
:bower
:processResources
:compileJava UP-TO-DATE
:compileScala UP-TO-DATE
:classes
:findMainClass
:bootRun
       __   __    __   __  .______     _______.___________. _______ .______
      |  | |  |  |  | |  | |   _  \   /       |           ||   ____||   _  \
      |  | |  |__|  | |  | |  |_)  | |   (----`---|  |----`|  |__   |  |_)  |
.--.  |  | |   __   | |  | |   ___/   \   \       |  |     |   __|  |      /
|  `--'  | |  |  |  | |  | |  |   .----)   |      |  |     |  |____ |  |\  \----.
 \______/  |__|  |__| |__| | _|   |_______/       |__|     |_______|| _| `._____|

                            http://jhipster.github.io

[INFO] com.ts.app.Application - Starting Application on Gnanaprakashs-MacBook-Pro.local with PID 74108 (/Users/gnana/workspace/TimeSheet/build/classes/main started by gnana in /Users/gnana/workspace/TimeSheet)
[DEBUG] com.ts.app.Application - Running with Spring Boot v1.3.0.RC1, Spring v4.2.2.RELEASE
[INFO] com.ts.app.Application - The following profiles are active: dev
[DEBUG] org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
[DEBUG] com.ts.app.config.AsyncConfiguration - Creating Async Task Executor
[DEBUG] com.ts.app.config.MetricsConfiguration - Registering JVM gauges
[DEBUG] com.ts.app.config.MetricsConfiguration - Initializing Metrics JMX reporting
[INFO] com.ts.app.config.WebConfigurer - Web application configuration, using profiles: [dev]
[DEBUG] com.ts.app.config.WebConfigurer - Initializing Metrics registries
[DEBUG] com.ts.app.config.WebConfigurer - Registering Metrics Filter
[DEBUG] com.ts.app.config.WebConfigurer - Registering Metrics Servlet
[DEBUG] com.ts.app.config.WebConfigurer - Initialize H2 console
[INFO] com.ts.app.config.WebConfigurer - Web application fully configured
[DEBUG] com.ts.app.config.DatabaseConfiguration - Configuring Datasource
[DEBUG] com.ts.app.config.DatabaseConfiguration - Configuring Liquibase
[WARN] com.ts.app.config.liquibase.AsyncSpringLiquibase - Starting Liquibase asynchronously, your database might not be ready at startup!
[DEBUG] com.ts.app.config.liquibase.AsyncSpringLiquibase - Started Liquibase in 1086 ms
[DEBUG] com.ts.app.config.CacheConfiguration - Starting Ehcache
[DEBUG] com.ts.app.config.CacheConfiguration - Registering Ehcache Metrics gauges
[INFO] com.ts.app.Application - Running with Spring profile(s) : [dev]
[INFO] com.ts.app.config.ThymeleafConfiguration - loading non-reloadable mail messages resources
[DEBUG] com.ts.app.config.apidoc.SwaggerConfiguration - Starting Swagger
[DEBUG] com.ts.app.config.apidoc.SwaggerConfiguration - Started Swagger in 10 ms
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.repository.CustomAuditEventRepository.auditEventRepository() with argument[s] = []
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.repository.CustomAuditEventRepository.auditEventRepository() with result = com.ts.app.repository.CustomAuditEventRepository$1@7a46fbf
[INFO] com.ts.app.Application - Started Application in 10.896 seconds (JVM running for 11.26)
[INFO] com.ts.app.Application - Access URLs:
----------------------------------------------------------
	Local: 		http://127.0.0.1:8088
	External: 	http://192.168.1.3:8088
----------------------------------------------------------
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Remember-me cookie detected
Hibernate: select persistent0_.series as series1_3_0_, persistent0_.ip_address as ip_addre2_3_0_, persistent0_.token_date as token_da3_3_0_, persistent0_.token_value as token_va4_3_0_, persistent0_.user_id as user_id6_3_0_, persistent0_.user_agent as user_age5_3_0_, user1_.id as id1_4_1_, user1_.created_by as created_2_4_1_, user1_.created_date as created_3_4_1_, user1_.last_modified_by as last_mod4_4_1_, user1_.last_modified_date as last_mod5_4_1_, user1_.activated as activate6_4_1_, user1_.activation_key as activati7_4_1_, user1_.email as email8_4_1_, user1_.first_name as first_na9_4_1_, user1_.lang_key as lang_ke10_4_1_, user1_.last_name as last_na11_4_1_, user1_.login as login12_4_1_, user1_.password as passwor13_4_1_, user1_.reset_date as reset_d14_4_1_, user1_.reset_key as reset_k15_4_1_ from jhi_persistent_token persistent0_ left outer join jhi_user user1_ on persistent0_.user_id=user1_.id where persistent0_.series=?
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - No persistent token found for series id: y8MnDYAysr4+WKM0l+3HaQ==
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Cancelling cookie
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:02:18 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.security.UserDetailsService - Authenticating admin
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
Hibernate: select authoritie0_.user_id as user_id1_4_0_, authoritie0_.authority_name as authorit2_5_0_, authority1_.name as name1_0_1_ from jhi_user_authority authoritie0_ inner join jhi_authority authority1_ on authoritie0_.authority_name=authority1_.name where authoritie0_.user_id=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:02:25 IST 2015, principal=admin, type=AUTHENTICATION_SUCCESS, data={details=org.springframework.security.web.authentication.WebAuthenticationDetails@fffc7f0c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: A1C31218D52D57AA732A1FB3E3C9B8BB}]]
Hibernate: insert into jhi_persistent_audit_event (event_id, event_date, event_type, principal) values (null, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:02:25 IST 2015, principal=admin, type=AUTHENTICATION_SUCCESS, data={details=org.springframework.security.web.authentication.WebAuthenticationDetails@fffc7f0c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: A1C31218D52D57AA732A1FB3E3C9B8BB}]]
Hibernate: insert into jhi_persistent_audit_event (event_id, event_date, event_type, principal) values (null, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Creating new persistent login for user admin
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
Hibernate: select persistent0_.series as series1_3_0_, persistent0_.ip_address as ip_addre2_3_0_, persistent0_.token_date as token_da3_3_0_, persistent0_.token_value as token_va4_3_0_, persistent0_.user_id as user_id6_3_0_, persistent0_.user_agent as user_age5_3_0_ from jhi_persistent_token persistent0_ where persistent0_.series=?
Hibernate: insert into jhi_persistent_token (ip_address, token_date, token_value, user_id, user_agent, series) values (?, ?, ?, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:02:25 IST 2015, principal=admin, type=AUTHENTICATION_SUCCESS, data={details=org.springframework.security.web.authentication.WebAuthenticationDetails@fffc7f0c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: A1C31218D52D57AA732A1FB3E3C9B8BB}]]
Hibernate: insert into jhi_persistent_audit_event (event_id, event_date, event_type, principal) values (null, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.web.rest.AccountResource.getAccount() with argument[s] = []
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.service.UserService.getUserWithAuthorities() with argument[s] = []
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.service.UserService.getUserWithAuthorities() with result = User{login='admin', firstName='Administrator', lastName='Administrator', email='admin@localhost', activated='true', langKey='en', activationKey='null'}
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.web.rest.AccountResource.getAccount() with result = <200 OK,UserDTO{login='admin', password='null', firstName='Administrator', lastName='Administrator', email='admin@localhost', activated=true, langKey='en', authorities=[ROLE_USER, ROLE_ADMIN]},{}>
Hibernate: select persistent0_.series as series1_3_0_, persistent0_.ip_address as ip_addre2_3_0_, persistent0_.token_date as token_da3_3_0_, persistent0_.token_value as token_va4_3_0_, persistent0_.user_id as user_id6_3_0_, persistent0_.user_agent as user_age5_3_0_, user1_.id as id1_4_1_, user1_.created_by as created_2_4_1_, user1_.created_date as created_3_4_1_, user1_.last_modified_by as last_mod4_4_1_, user1_.last_modified_date as last_mod5_4_1_, user1_.activated as activate6_4_1_, user1_.activation_key as activati7_4_1_, user1_.email as email8_4_1_, user1_.first_name as first_na9_4_1_, user1_.lang_key as lang_ke10_4_1_, user1_.last_name as last_na11_4_1_, user1_.login as login12_4_1_, user1_.password as passwor13_4_1_, user1_.reset_date as reset_d14_4_1_, user1_.reset_key as reset_k15_4_1_ from jhi_persistent_token persistent0_ left outer join jhi_user user1_ on persistent0_.user_id=user1_.id where persistent0_.series=?
[INFO] com.ts.app.security.CustomPersistentRememberMeServices - presentedToken=50xOWbwW0xCQQslEEJN3wA== / tokenValue=50xOWbwW0xCQQslEEJN3wA==
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Logout of user admin
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Cancelling cookie
Hibernate: delete from jhi_persistent_token where series=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:03:02 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:11:33 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:12:56 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.security.UserDetailsService - Authenticating user
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
Hibernate: select authoritie0_.user_id as user_id1_4_0_, authoritie0_.authority_name as authorit2_5_0_, authority1_.name as name1_0_1_ from jhi_user_authority authoritie0_ inner join jhi_authority authority1_ on authoritie0_.authority_name=authority1_.name where authoritie0_.user_id=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:14:35 IST 2015, principal=user, type=AUTHENTICATION_SUCCESS, data={details=org.springframework.security.web.authentication.WebAuthenticationDetails@21a2c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: 3A01FC10006C740CE1E22258E1E15F45}]]
Hibernate: insert into jhi_persistent_audit_event (event_id, event_date, event_type, principal) values (null, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:14:35 IST 2015, principal=user, type=AUTHENTICATION_SUCCESS, data={details=org.springframework.security.web.authentication.WebAuthenticationDetails@21a2c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: 3A01FC10006C740CE1E22258E1E15F45}]]
Hibernate: insert into jhi_persistent_audit_event (event_id, event_date, event_type, principal) values (null, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Creating new persistent login for user user
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
Hibernate: select persistent0_.series as series1_3_0_, persistent0_.ip_address as ip_addre2_3_0_, persistent0_.token_date as token_da3_3_0_, persistent0_.token_value as token_va4_3_0_, persistent0_.user_id as user_id6_3_0_, persistent0_.user_agent as user_age5_3_0_ from jhi_persistent_token persistent0_ where persistent0_.series=?
Hibernate: insert into jhi_persistent_token (ip_address, token_date, token_value, user_id, user_agent, series) values (?, ?, ?, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:14:35 IST 2015, principal=user, type=AUTHENTICATION_SUCCESS, data={details=org.springframework.security.web.authentication.WebAuthenticationDetails@21a2c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: 3A01FC10006C740CE1E22258E1E15F45}]]
Hibernate: insert into jhi_persistent_audit_event (event_id, event_date, event_type, principal) values (null, ?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
Hibernate: insert into jhi_persistent_audit_evt_data (event_id, name, value) values (?, ?, ?)
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.web.rest.AccountResource.getAccount() with argument[s] = []
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.service.UserService.getUserWithAuthorities() with argument[s] = []
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.service.UserService.getUserWithAuthorities() with result = User{login='user', firstName='User', lastName='User', email='user@localhost', activated='true', langKey='en', activationKey='null'}
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.web.rest.AccountResource.getAccount() with result = <200 OK,UserDTO{login='user', password='null', firstName='User', lastName='User', email='user@localhost', activated=true, langKey='en', authorities=[ROLE_USER]},{}>
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.web.rest.AccountResource.getAccount() with argument[s] = []
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.service.UserService.getUserWithAuthorities() with argument[s] = []
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.service.UserService.getUserWithAuthorities() with result = User{login='user', firstName='User', lastName='User', email='user@localhost', activated='true', langKey='en', activationKey='null'}
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.web.rest.AccountResource.getAccount() with result = <200 OK,UserDTO{login='user', password='null', firstName='User', lastName='User', email='user@localhost', activated=true, langKey='en', authorities=[ROLE_USER]},{}>
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.web.rest.AccountResource.getCurrentSessions() with argument[s] = []
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
Hibernate: select persistent0_.series as series1_3_, persistent0_.ip_address as ip_addre2_3_, persistent0_.token_date as token_da3_3_, persistent0_.token_value as token_va4_3_, persistent0_.user_id as user_id6_3_, persistent0_.user_agent as user_age5_3_ from jhi_persistent_token persistent0_ left outer join jhi_user user1_ on persistent0_.user_id=user1_.id where user1_.id=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.web.rest.AccountResource.getCurrentSessions() with result = <200 OK,[PersistentToken{series='livpHUziyTkCIEPWyodw/w==', tokenValue='6oNNA7kRldDSdNLM8wsf1g==', tokenDate=2015-11-08, ipAddress='0:0:0:0:0:0:0:1', userAgent='Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:41.0) Gecko/20100101 Firefox/41.0'}],{}>
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.web.rest.AccountResource.getAccount() with argument[s] = []
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: com.ts.app.service.UserService.getUserWithAuthorities() with argument[s] = []
Hibernate: select user0_.id as id1_4_, user0_.created_by as created_2_4_, user0_.created_date as created_3_4_, user0_.last_modified_by as last_mod4_4_, user0_.last_modified_date as last_mod5_4_, user0_.activated as activate6_4_, user0_.activation_key as activati7_4_, user0_.email as email8_4_, user0_.first_name as first_na9_4_, user0_.lang_key as lang_ke10_4_, user0_.last_name as last_na11_4_, user0_.login as login12_4_, user0_.password as passwor13_4_, user0_.reset_date as reset_d14_4_, user0_.reset_key as reset_k15_4_ from jhi_user user0_ where user0_.login=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.service.UserService.getUserWithAuthorities() with result = User{login='user', firstName='User', lastName='User', email='user@localhost', activated='true', langKey='en', activationKey='null'}
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: com.ts.app.web.rest.AccountResource.getAccount() with result = <200 OK,UserDTO{login='user', password='null', firstName='User', lastName='User', email='user@localhost', activated=true, langKey='en', authorities=[ROLE_USER]},{}>
[INFO] com.ts.app.security.CustomPersistentRememberMeServices - presentedToken=6oNNA7kRldDSdNLM8wsf1g== / tokenValue=6oNNA7kRldDSdNLM8wsf1g==
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Logout of user user
[DEBUG] com.ts.app.security.CustomPersistentRememberMeServices - Cancelling cookie
Hibernate: delete from jhi_persistent_token where series=?
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:20:12 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:26:20 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:26:23 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:26:30 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:30:15 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:30:17 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:30:18 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:30:18 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:31:28 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:31:40 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Enter: org.springframework.boot.actuate.audit.AuditEventRepository.add() with argument[s] = [AuditEvent [timestamp=Sun Nov 08 19:32:39 IST 2015, principal=anonymousUser, type=AUTHORIZATION_FAILURE, data={type=org.springframework.security.access.AccessDeniedException, message=Access is denied}]]
[DEBUG] com.ts.app.aop.logging.LoggingAspect - Exit: org.springframework.boot.actuate.audit.AuditEventRepository.add() with result = null
[DEBUG] com.ts.app.security.Http401UnauthorizedEntryPoint - Pre-authenticated entry point called. Rejecting access
:bootRun FAILED

BUILD FAILED

Total time: 31 mins 26.98 secs
